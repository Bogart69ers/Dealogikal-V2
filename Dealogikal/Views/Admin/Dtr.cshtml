@model Dealogikal.ViewModel.AccountViewModel

@{
    ViewBag.Title = "Dtr";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-wrapper">
    <h3 class="font-weight-bold">Daily Time Record</h3>

    <div class="card-body" style="background-color:white; min-height:490px; border-radius:20px; padding: 20px;">
        <!-- Search Bar -->
        <input type="text" id="searchTable" class="form-control mb-3" placeholder="Search...">

        <!-- Scrollable Table -->
        <div class="table-responsive" style="max-height: 400px; overflow-y: auto; text-align: center;">
            <table class="table table-striped table-borderless" id="dtrTable">
                <thead>
                    <tr>
                        <th rowspan="2" class="sortable" data-column="0">Date </th>
                        <th colspan="2" class="text-center">Morning</th>
                        <th colspan="2" class="text-center">Afternoon</th>
                        <th rowspan="2" class="sortable" data-column="5">Work Mode </th>
                    </tr>
                    <tr>
                        <th class="sortable" data-column="1">Time In </th>
                        <th class="sortable" data-column="3">Break In </th>
                        <th class="sortable" data-column="2">Break Out </th>
                        <th class="sortable" data-column="4">Time Out </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.dtrRecords != null && Model.dtrRecords.Any())
                    {
                        foreach (var record in Model.dtrRecords)
                        {
                            <tr>
                                <td>@record.date.ToString("yyyy-MM-dd")</td>
                                <td>@(record.timeIn.HasValue ? record.timeIn.Value.ToString("hh:mm tt") : "—")</td>
                                <td>@(record.breakIn.HasValue ? record.breakIn.Value.ToString("hh:mm tt") : "—")</td>
                                <td>@(record.breakOut.HasValue ? record.breakOut.Value.ToString("hh:mm tt") : "—")</td>
                                <td>@(record.timeOut.HasValue ? record.timeOut.Value.ToString("hh:mm tt") : "—")</td>
                                <td>@record.workMode</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6">No DTR records found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Scrollable Table & Search Bar Styles -->
<style>
    .table-responsive {
        max-height: 400px;
        overflow-y: auto;
        border-radius: 10px;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
            cursor: pointer;
        }

        .table thead {
            background: #4B49AC;
            font-weight: bold;
            color: white;
        }

    #searchTable {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 5px;
        outline: none;
        max-width:280px;
    }

    .sortable {
        cursor: pointer;
    }

    .sorted-asc::after {
        content: " ▲";
    }

    .sorted-desc::after {
        content: " ▼";
    }
</style>

<!-- Include jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        // Universal Search Function
        $("#searchTable").on("keyup", function () {
            var searchValue = $(this).val().toLowerCase();

            $("#dtrTable tbody tr").each(function () {
                var rowText = $(this).text().toLowerCase(); // Get all row text
                $(this).toggle(rowText.includes(searchValue)); // Show/Hide row based on search match
            });
        });

        // Sorting Function
        $(".sortable").on("click", function () {
            var table = $("#dtrTable tbody");
            var rows = table.find("tr").toArray();
            var column = $(this).data("column");
            var isAscending = !$(this).hasClass("sorted-asc");

            // Remove existing sort indicators
            $(".sortable").removeClass("sorted-asc sorted-desc");

            // Sort rows
            rows.sort(function (a, b) {
                var cellA = $(a).find("td").eq(column).text().trim();
                var cellB = $(b).find("td").eq(column).text().trim();

                // Convert Date values for sorting
                if (column === 0) {
                    cellA = new Date(cellA);
                    cellB = new Date(cellB);
                }

                return isAscending ? (cellA > cellB ? 1 : -1) : (cellA < cellB ? 1 : -1);
            });

            // Append sorted rows
            $.each(rows, function (index, row) {
                table.append(row);
            });

            // Add sorted class
            $(this).addClass(isAscending ? "sorted-asc" : "sorted-desc");
        });
    });
</script>



